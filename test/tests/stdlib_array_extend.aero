arr1 := [1, 2, 3]
arr2 := [4, 5, 6]
arr3 := ["apple", "banana"]
arr4 := []
arr5 := [Bool.true, Bool.false]
arr6 := [[1, 2], [3, 4]]
arr7 := [10, 20, 30]
arr8 := [_, "test", Bool.true]

IO.print("Initial arr1:\n", arr1, "\nSize: ", Array.len(arr1), "\n")
Array.extend(arr1, arr2, arr3)
IO.print("After extending with arr2 and arr3:\n", arr1, "\nSize: ", Array.len(arr1), "\n")

Array.extend(arr1, arr4)
IO.print("After extending with arr4 (empty):\n", arr1, "\nSize: ", Array.len(arr1), "\n")

Array.extend(arr1, arr5)
IO.print("After extending with arr5:\n", arr1, "\nSize: ", Array.len(arr1), "\n")

Array.extend(arr1, arr6)
IO.print("After extending with nested arr6:\n", arr1, "\nSize: ", Array.len(arr1), "\n")

Array.extend(arr1, arr7)
IO.print("After extending with arr7:\n", arr1, "\nSize: ", Array.len(arr1), "\n")

Array.extend(arr1, arr8)
IO.print("After extending with arr8 (mixed types):\n", arr1, "\nSize: ", Array.len(arr1), "\n")

arr9 := arr1
Array.extend(arr9, [100, 200])
IO.print("After extending arr1 through arr9 (self-reference):\n", arr1, "\nSize: ", Array.len(arr1), "\n")
